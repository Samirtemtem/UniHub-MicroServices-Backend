version: "3.9"
services:
  # Keycloak and PostgreSQL for authentication
  postgres-keycloak:
    image: postgres:13
    container_name: postgres-keycloak
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - unihub-network
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    ports:
      - "8180:8080"
    depends_on:
      - postgres-keycloak
    networks:
      - unihub-network
    restart: unless-stopped

  universite:
    build: .\Universite
    image: "universite-img"
    container_name: universite
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/universite?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL5InnoDBDialect
    restart: unless-stopped
    networks:
      - unihub-network
    depends_on:
      - eureka
      - config-server
      - mysql-db

  club-node:
    build:
      context: .\MS_club
      dockerfile: dockerfile
    image: "club-img"
    container_name: "club-node"
    ports:
      - "3000:3000"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - HOSTNAME=club-node
      - IP_ADDR=club-node
      - app_file_storage_mapping=file:/app/upload-directory
    restart: unless-stopped
    networks:
      - unihub-network
    depends_on:
      - eureka
  restaurant:
    build: .\restaurant
    image: "restaurant-img"
    container_name: restaurant
    ports:
      - "8090:8090"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
    restart: unless-stopped
    networks:
      - unihub-network
    depends_on:
      - eureka
      - config-server


  event:
    build: .\Event_MS
    image: "event-img"
    container_name: event
    ports:
      - "8087:8087"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/event?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    restart: unless-stopped
    networks:
      - unihub-network
    depends_on:
      - eureka
      - config-server
      - mysql-db
      - rabbitmq

  specialite:
    build: .\MS_specialite
    image: "specialite-img"
    container_name: specialite
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/MS-Specialite?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL5InnoDBDialect
    restart: unless-stopped
    networks:
      - unihub-network
    depends_on:
      - eureka
      - config-server
      - mysql-db

  news:
    build: .\UniHub-news
    image: news
    container_name: news
    ports:
      - "8085:8085"
    volumes:
      - ./upload-directory:/upload-directory
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/unihub_news?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL5InnoDBDialect
      - APP_FILE_UPLOAD_DIR=/upload-directory
    restart: unless-stopped
    networks:
      - unihub-network
    depends_on:
      - eureka
      - config-server
      - mysql-db

  config-server:
    build: .\config-server
    image: "config-server-img"
    container_name: "config-server"
    ports:
      - "8888:8888"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - SPRING_PROFILES_ACTIVE=native
    networks:
      - unihub-network
    depends_on:
      - eureka
      - mysql-db

  eureka:
    build: .\EurekaD
    image: "eureka-img"
    container_name: "eureka"
    ports:
      - "8761:8761"
    hostname: discovery
    networks:
      - unihub-network

  gateway:
    build: .\ApiGateway
    image: "gateway-img"
    container_name: "gateway"
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
    
    networks:
      - unihub-network
    depends_on:
      - eureka
      - config-server
      - keycloak
      - universite
      - event
      - news
      - restaurant
      - specialite
      - club-node

  mysql-db:
    image: "mysql:5.6"
    container_name: "mysql-db"
    environment:
      - MYSQL_ROOT_PASSWORD=root #indisponsable pour la conteneurisation
    ports:
      - "3307:3306"
    restart: unless-stopped
    networks:
      - unihub-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ standard port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped
    networks:
      - unihub-network

# Define a custom network with a specific name
networks:
  unihub-network:
    name: unihub-network

# Define volumes
volumes:
  postgres_data:
